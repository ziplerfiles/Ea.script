 
if not LPH_OBFUSCATED then
  LPH_JIT = function(...) return ... end
  LPH_JIT_MAX = function(...) return ... end
  LPH_JIT_ULTRA = function(...) return ... end
  LPH_NO_VIRTUALIZE = function(...) return ... end
  LPH_NO_UPVALUES = function(f) return(function(...) return f(...) end) end
  LPH_ENCSTR = function(...) return ... end
  LPH_STRENC = function(...) return ... end
  LPH_HOOK_FIX = function(...) return ... end
  LPH_CRASH = function() return print(debug.traceback()) end
  end;
 
  ------------------------------------------------------------------------------------
 
  local PipePistolDerect = require(game.ReplicatedStorage.ItemConfigs.PipePistol)
  local PipeSMGDerect = require(game.ReplicatedStorage.ItemConfigs.PipeSMG)
  local USPDerect = require(game.ReplicatedStorage.ItemConfigs.USP)
  local HMARDerect = require(game.ReplicatedStorage.ItemConfigs.HMAR)
  local CrossbowDerect = require(game.ReplicatedStorage.ItemConfigs.Crossbow)
  local BowDerect = require(game.ReplicatedStorage.ItemConfigs.Bow)
  local BlunderbussDerect = require(game.ReplicatedStorage.ItemConfigs.Blunderbuss)
  local DerectCrossbow = require(game.ReplicatedStorage.ItemConfigs.Crossbow)
  local KatanaDerect = require(game.ReplicatedStorage.ItemConfigs.Katana)
  local HammerDerect = require(game.ReplicatedStorage.ItemConfigs.Hammer)
  local SteelHammerDerect = require(game.ReplicatedStorage.ItemConfigs.SteelHammer)
  local IronHammerDerect = require(game.ReplicatedStorage.ItemConfigs.IronHammer)
  local StoneHammerDerect = require(game.ReplicatedStorage.ItemConfigs.StoneHammer)
  local BloxyColaDerect = require(game.ReplicatedStorage.ItemConfigs.BloxyCola)
  local HealingBandageDerect = require(game.ReplicatedStorage.ItemConfigs.HealingBandage)
  local RedBerryDerect = require(game.ReplicatedStorage.ItemConfigs.RedBerry)
  local YellowBerryDerect = require(game.ReplicatedStorage.ItemConfigs.YellowBerry)
  local BlackBerryDerect = require(game.ReplicatedStorage.ItemConfigs.BlackBerry)
  local BandageDerect = require(game.ReplicatedStorage.ItemConfigs.Bandage)
  local CrowbarDerect = require(game.ReplicatedStorage.ItemConfigs.Crowbar)
  local LaserPistolDerect = require(game.ReplicatedStorage.ItemConfigs.LaserPistol)
 
  ------------------------------------------------------------------------------------
 
  --// locals Shit
  local last_updated = "02/22/2023"
  local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
 
  local RepStorage = game:GetService("ReplicatedStorage")
  local workspace = game:GetService("Workspace")
  local userinputservice = game:GetService("UserInputService")
  local runservice = game:GetService("RunService")
  local httpservice = game:GetService("HttpService")
  local coregui = game:GetService("CoreGui")
  local lighting = game:GetService("Lighting")
  local guiservice = game:GetService("GuiService")
  local SoundService = game:GetService("SoundService")
  local camera = game:GetService("Workspace").Camera;
 
  local Client = game.Players.LocalPlayer
  local Players = game.Players
  local worldToViewportPoint = camera.worldToViewportPoint
 
  local drawing_new = Drawing.new
  local color3_new, color3_fromrgb = Color3.new, Color3.fromRGB
  local vector3_new, vector2_new = Vector3.new, Vector2.new
  local math_huge, math_floor, math_ceil = math.huge, math.floor, math.ceil
  local ray_new = Ray.new
 
  ------------------------------------------------------------------------------------------
 
  --Esp Shit
 
  --// Ore ESP -()
  _G.Shitter = false
  _G.Settings = {
    iron = {
      enabled = true,
      colour = Color3.fromRGB(199, 172, 120),
    },
    nitrate = {
      enabled = true,
      colour = Color3.fromRGB(255,255,0),
    },
    stone = {
      enabled = true,
      colour = Color3.fromRGB(205, 205, 205),
    },
  }
 
  --// Main ESP -()
  local Config = {
    Esp = {
      Box               = false,
      BoxFilled         = false,
      BoxOutline        = false,
      BoxTransparency   = 0,
      BoxColor          = Color3.fromRGB(255,255,255),
      BoxOutlineColor   = Color3.fromRGB(0,0,0),
      Names             = false,
      NamesOutline      = false,
      NamesColor        = Color3.fromRGB(255,255,255),
      NamesOutlineColor = Color3.fromRGB(0,0,0),
      NamesFont         = 2, -- 1,2,3
      NamesSize         = 11,
    },
  }
 
  function CreateEsp(Player)
    local Box,BoxOutline,Name,HealthBar,HealthBarOutline = Drawing.new("Square"),Drawing.new("Square"),Drawing.new("Text"),Drawing.new("Square"),Drawing.new("Square")
    local Updater = game:GetService("RunService").RenderStepped:Connect(function()
    if Player ~= nil and Player:FindFirstChild("Humanoid") ~= nil and Player:FindFirstChild("HumanoidRootPart") ~= nil and Player.Humanoid.Health > 0 and Player:FindFirstChild("Head") ~= nil then
      local Target2dPosition,IsVisible = workspace.CurrentCamera:WorldToViewportPoint(Player.HumanoidRootPart.Position)
      local scale_factor = 1 / (Target2dPosition.Z * math.tan(math.rad(workspace.CurrentCamera.FieldOfView * 0.5)) * 2) * 100
      local width, height = math.floor(40 * scale_factor), math.floor(60 * scale_factor)
      if Config.Esp.Box  then
        Box.Visible = IsVisible
        Box.Color = Config.Esp.BoxColor
        Box.Size = Vector2.new(width,height)
        Box.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2)
        Box.Filled = Config.Esp.BoxFilled
        Box.Thickness = 1
        Box.Transparency = Config.Esp.BoxTransparency
        Box.ZIndex = 69
        if Config.Esp.BoxOutline then
          BoxOutline.Visible = IsVisible
          BoxOutline.Color = Config.Esp.BoxOutlineColor
          BoxOutline.Size = Vector2.new(width,height)
          BoxOutline.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2)
          BoxOutline.Filled = false
          BoxOutline.Thickness = 1
          BoxOutline.ZIndex = 1
        else
          BoxOutline.Visible = false
        end
      else
        Box.Visible = false
        BoxOutline.Visible = false
      end
      if Config.Esp.Names then
        Name.Visible = IsVisible
        Name.Color = Config.Esp.NamesColor
        Name.Text = "Player"
        Name.Center = true
        Name.Outline = Config.Esp.NamesOutline
        Name.OutlineColor = Config.Esp.NamesOutlineColor
        Name.Position = Vector2.new(Target2dPosition.X,Target2dPosition.Y - height * 0.5 + -14)
        Name.Font = Config.Esp.NamesFont
        Name.Size = Config.Esp.NamesSize
      else
        Name.Visible = false
      end
    else
      Box.Visible = false
      BoxOutline.Visible = false
      Name.Visible = false
      if not Player then
        Box:Remove()
        BoxOutline:Remove()
        Name:Remove()
        Updater:Disconnect()
      end
    end
    end)
  end
  for _,i in pairs(game:GetService("Workspace"):GetChildren()) do
    if i:FindFirstChild("Humanoid") and i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i.Head:FindFirstChild("Nametag") then
      CreateEsp(i)
    end
  end
 
  game.Workspace.DescendantAdded:Connect(function(i)
  if i:FindFirstChild("Humanoid") and i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i.Head:FindFirstChild("Nametag") then
    CreateEsp(i)
  end
  end)
 
  --------------------------------------------------------------------------------------
 
  --// UI Shit
  local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Library.lua'))()
  local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Save%20Manager'))()
  local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Theme.lua'))()
 
  ------------------------------------------------------------------------------------
 
  wait(0)Library:Notify("WelcomeðŸ‘‹: "..game.Players.LocalPlayer.Name.." loading...")
  wait(0)Library:Notify("EA Script Loaded ðŸ”«")
 
  game.Players.PlayerAdded:Connect(function(player)
  if player:IsFriendsWith(game.Players.LocalPlayer.UserId) then
    Library:Notify(("Notification - Friend | User:"..player.DisplayName.. " | Joined"), 6, Color3.fromRGB(0, 255, 60))
  else
    Library:Notify(("Notification - Player | User:"..player.DisplayName.. " | Joined"), 3, Color3.fromRGB(0, 255, 60))
  end
  end)
 
  game.Players.PlayerRemoving:Connect(function(player)
  if player:IsFriendsWith(game.Players.LocalPlayer.UserId) then
    Library:Notify(("Notification - Friend | User:"..player.DisplayName.. " | Left"), 6, Color3.fromRGB(255, 0, 0))
  else
    Library:Notify(("Notification - Player | User:"..player.DisplayName.. " | Left"), 3, Color3.fromRGB(255, 0, 0))
  end
  end)
 
  --// Create UI
 
  local Version = "Free" --Dev, Premium, Lite, Free--
  local Build = "Free"
  local Color = "#00FF00"
 
  if Build == "Testing" then
    Color = '#0000FF'
    Ver = "1.1"
  elseif Build == "Free" then
    Color = '#00FF00'
    Ver = "1.1"
  elseif Build == "Lite" then
    Color = '#0000FF'
    Ver = "1.1"
  elseif Build == "Premium" then
    Color = '#FFFF00'
    Ver = "1.1"
  elseif Build == "Dev" then
    Color = '#FF0000'
    Ver = "1.0.2"
  end
 
  local Window = Library:CreateWindow({ Size = UDim2.fromOffset(550, 620),
  Title = ".<font color=\"#d17bff\">Ea Script </font> | ".."<font color=\""..Color.."\">"..Build.."</font>".."                                      [v"..Ver.."]",
  Center = true,
  AutoShow = true,
})
 
---------------------------------------------------------------------------------------------------
 
--Tabs Shit
local Tabs = {
  CombatTab = Window:AddTab('Combat'),
  VisualsTab = Window:AddTab('Visuals'),
  UISettings = Window:AddTab('UI Settings'),
}
 
--------------------------------------------------------------------------------------------------
--Combat Shit
 
local AimlockTabBox = Tabs.CombatTab:AddLeftTabbox('Aimbot')
local AimlockTab = AimlockTabBox:AddTab('Aimbot')
 
local Camera = workspace.CurrentCamera
 
--// Aimbot \\--
 
local Camera = game:GetService("Workspace").Camera;
local UIS = game:GetService("UserInputService")
 
local fovcircle2 = Drawing.new("Circle")
fovcircle2.Visible = false
fovcircle2.Radius = 0
fovcircle2.Color = Color3.fromRGB(255,255,255)
fovcircle2.Thickness = 1
fovcircle2.Filled = false
fovcircle2.Transparency = 1
fovcircle2.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
 
local function viewportPoint(ret, ...)
  if type(ret) == "boolean" then
    local pos, vis = workspace.CurrentCamera:WorldToViewportPoint(...)
    return pos
  else
    return workspace.CurrentCamera:WorldToViewportPoint(ret, ...)
  end
end
 
local function GetPlayer()
  local last_distance = math.huge
  local target = nil
 
  for i, v in pairs(workspace:GetChildren()) do
    if v:IsA("Model") and v:FindFirstChild("Humanoid") and v.Name ~= "Player" then
      if v.Humanoid.Health ~= 0 and v.PrimaryPart ~= nil and v:FindFirstChild("Head") then
        local sp, visible = viewportPoint(v:WaitForChild("HumanoidRootPart", math.huge).Position)
        local mouse_loc = UIS:GetMouseLocation()
        local distance = (Vector2.new(mouse_loc.X, mouse_loc.Y) - Vector2.new(sp.X, sp.Y)).Magnitude
 
        local pos = Camera.WorldToViewportPoint(Camera, v.PrimaryPart.Position)
 
        if distance < last_distance and distance < fovcircle2.Radius then
 
          last_distance = distance
          target = v
 
        end
      end
    end
  end
 
  return target
end
 
local Sensitivity = 1
local LoopBad = nil
MovementPrediction = false
local AimbotSensitivity = 1
local Mouse = game.Players.LocalPlayer:GetMouse()
 
local function AimToPosition(Position)
  local AimX = ((Position.X - Mouse.X) + 0) / AimbotSensitivity
  local AimY = ((Position.Y - Mouse.Y - 36) + 0) / AimbotSensitivity
  return AimX, AimY
end
 
local AimbotEnabled = false
local RunService = game:GetService("RunService")
local OldPosition = nil
local function CalculateVelocity(Before, After, deltaTime)
  -- // Vars
  local Displacement = (After - Before)
  local Velocity = Displacement / deltaTime
  -- // Return
  return Velocity
end
 
local function viewportPoint(ret, ...)
  if type(ret) == "boolean" then
    local pos, vis = workspace.CurrentCamera:WorldToViewportPoint(...)
    return pos
  else
    return workspace.CurrentCamera:WorldToViewportPoint(ret, ...)
  end
end
 
local PredictionSmoothness = 15
local BoostAim = UIS.MouseDeltaSensitivity
local DefaultUIS = UIS.MouseDeltaSensitivity
local Middle = game.Workspace.Ignore.LocalCharacter.Middle
local BulletDropPrediction = 0
local Cheese2 = "Head"
local Key = Enum.UserInputType.MouseButton2
 
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
if input.UserInputType == Key then
  Aiming = true
  LoopBad = RunService.RenderStepped:Connect(function(dt)
  if Aiming and AimbotEnabled == true then
    local p = nil
    if not TargetRN then
      p = GetPlayer()
      if p then
        TargetRN = p
      end
    else
      p = TargetRN
    end
    if not p then return end
 
    if p ~= nil then
      UIS.MouseDeltaSensitivity = BoostAim
      local CurrentPosition = p.HumanoidRootPart.Position
      if OldPosition == nil then
        OldPosition = CurrentPosition
      end
      local Velocity = CalculateVelocity(OldPosition,CurrentPosition,dt)
      local Prediction = Vector3.new(0, 0, 0)
      if MovementPrediction == true then
        if Cheese2 == "Head" then
          Prediction = Velocity * (PredictionSmoothness / 15) * (Middle.Position - p.Head.Position).magnitude / 100
        end
        if Cheese2 == "UpperTorso" then
          Prediction = Velocity * (PredictionSmoothness / 15) * (Middle.Position - p.UpperTorso.Position).magnitude / 100
        end
        if Cheese2 == "HumanoidRootPart" then
          Prediction = Velocity * (PredictionSmoothness / 15) * (Middle.Position - p.HumanoidRootPart.Position).magnitude / 100
        end
      end
 
      OldPosition = CurrentPosition
 
      if Cheese2 == "Head" then
        local AimAt = Camera:WorldToViewportPoint(p.Head.Position + Vector3.new(0, 0.5 * 196.2 * BulletDropPrediction * BulletDropPrediction, 0) + Prediction)
        mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
      end
      if Cheese2 == "UpperTorso" then
        AimAt = Camera:WorldToViewportPoint(p.UpperTorso.Position + Vector3.new(0, 0.5 * 196.2 * BulletDropPrediction * BulletDropPrediction, 0) + Prediction)
        mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
      end
      if Cheese2 == "HumanoidRootPart" then
        AimAt = Camera:WorldToViewportPoint(p.HumanoidRootPart.Position + Vector3.new(0, 0.5 * 196.2 * BulletDropPrediction * BulletDropPrediction, 0) + Prediction)
        mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
      end
    end
  end
  end)
end
end)
 
local OldDelta = UIS.MouseDeltaSensitivity
 
UIS.InputEnded:Connect(function(input, gameProcessedEvent)
if input.UserInputType == Key then
  Aiming = false
  UIS.MouseDeltaSensitivity = OldDelta
  OldPosition = nil
  local success, errormessage = pcall(function()
  LoopBad:Disconnect()
  end)
  if not success then
    warn(errormessage)
  end
  UIS.MouseDeltaSensitivity = DefaultUIS
  TargetRN = nil
end
end)
 
AimlockTab:AddToggle('Enabledaz69', {
  Text = 'Enabled',
  Default = false, -- Default value (true / false)
  Tooltip = 'Enables Aimbot', -- Information shown when you hover over the toggle
}):AddKeyPicker('KeyPicker69', {
Default = 'MB2',
SyncToggleState = false,
Mode = 'Hold',
Text = 'Aimbot',
NoUI = false,
}):OnChanged(function(x)
AimbotEnabled = x
end)
 
AimlockTab:AddSlider('AimlockSmoothness_Slider', {Text = 'Smoothness', Suffix = "%", Default = 1, Min = 0.1, Max = 10, Rounding = 1, Compact = true,}):OnChanged(function(aimbotsmoothnesvalue)
AimbotSensitivity = aimbotsmoothnesvalue
end)
 
AimlockTab:AddToggle('Prediction_Enabled', {
Text = 'Prediction',
Default = false, -- Default value (true / false)
Tooltip = 'Enables Prediction', -- Information shown when you hover over the toggle
}):OnChanged(function(x)
MovementPrediction = x
end)
 
AimlockTab:AddSlider('Aimbot_Prediction', {Text = 'Prediction Ammount', Suffix = "%", Default = 0, Min = 0, Max = 5, Rounding = 1, Compact = true,}):OnChanged(function(a)
PredictionSmoothness = a
end)
 
AimlockTab:AddDivider()
 
AimlockTab:AddToggle('DrawFov_Sus', {Text = 'Draw Fov', Default = false}):AddColorPicker("DrawFov_Color", {Default = Color3.fromRGB(255,255,255)}):OnChanged(function(x)
fovcircle2.Visible = x
end)
 
Options.DrawFov_Color:OnChanged(function(valuefov)
fovcircle2.Color = valuefov
end)
 
AimlockTab:AddSlider('AimlockRadius_Slider', {Text = 'FOV Size', Suffix = "px", Default = 0, Min = 0, Max = 300, Rounding = 0, Compact = true,}):OnChanged(function(a)
fovcircle2.Radius = a
end)
 
AimlockTab:AddDropdown('Aimlock_Part', {Values = {'Head', 'UpperTorso', 'HumanoidRootPart'}, Default = 1, Multi = false, Text = 'Aim Part'}):OnChanged(function(callback)
Cheese2 = callback
end)
 
--// Miscellaneous Tab
 
local CustomHitsoundsTabBox = Tabs.CombatTab:AddRightTabbox('Custom Hitsounds')
local CustomHitsoundsTab = CustomHitsoundsTabBox:AddTab('Custom Hitsounds')
 
SoundService.PlayerHitHeadshot.Volume = 5
SoundService.PlayerHitHeadshot.Pitch = 1
SoundService.PlayerHitHeadshot.EqualizerSoundEffect.HighGain = -2
 
CustomHitsoundsTab:AddToggle('Enabled_Toggle', {Text = 'Enabled', Default = false})
 
CustomHitsoundsTab:AddDropdown('HeadshotHit', {
Values = { 'Default', 'Gamesense', 'CS:GO', 'Among Us', 'Neverlose', 'TF2 Critical', 'Mario', 'Rust', 'Call of Duty', 'Steve', 'Bamboo', 'Minecraft', 'TF2', },
Default = 1,
Multi = false,
Text = 'Custom Head Hitsound',
Tooltip = 'Changes player hit headshot sound',
})
Options.HeadshotHit:OnChanged(function()
if Options.HeadshotHit.Value == "Default" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://9119561046"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Gamesense" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://4817809188"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "CS:GO" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://6937353691"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Among Us" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://5700183626"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Neverlose" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://8726881116"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "TF2 Critical" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://296102734"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Mario" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://2815207981"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Rust" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://1255040462"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Call of Duty" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://5952120301"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Steve" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://4965083997"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Bamboo" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://3769434519"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
if Options.HeadshotHit.Value == "Minecraft" then
game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://4018616850"
game:GetService("SoundService").PlayerHitHeadshot.Playing = true
 
if Options.HeadshotHit.Value == "TF2" then
  game:GetService("SoundService").PlayerHitHeadshot.SoundId = "rbxassetid://2868331684"
  game:GetService("SoundService").PlayerHitHeadshot.Playing = true
end
 
end
end)
 
CustomHitsoundsTab:AddSlider('Volume_Slider', {Text = 'Volume', Default = 5, Min = 0, Max = 10, Rounding = 1, Compact = true,}):OnChanged(function(vol)
SoundService.PlayerHitHeadshot.Volume = vol
end)
 
CustomHitsoundsTab:AddSlider('Pitch_Slider', {Text = 'Volume', Default = 1, Min = 0, Max = 2, Rounding = 1, Compact = true,}):OnChanged(function(pich)
SoundService.PlayerHitHeadshot.Pitch = pich
end)
 
CustomHitsoundsTab:AddInput('HeadshotPlaceHolder', {Default = 'rbxassetid://', Numeric = false, Finished = false, Text = 'Custom Hitsound', Placeholder = 'rbxassetid://'})
game:GetService("SoundService").PlayerHitHeadshot.SoundId = Options.HeadshotPlaceHolder.Value
 
CustomHitsoundsTab:AddToggle('Enabled_Toggle', {Text = 'Enabled', Default = false})
 
CustomHitsoundsTab:AddDropdown('Hit', {
Values = { 'Default', 'Gamesense', 'CS:GO', 'Among Us', 'Neverlose', 'TF2 Critical', 'Mario', 'Rust', 'Call of Duty', 'Steve', 'Bamboo', 'Minecraft', 'TF2', },
Default = 1,
Multi = false,
Text = 'Custom Body Hitsound',
Tooltip = 'Changes player hit sound',
})
Options.Hit:OnChanged(function()
if Options.Hit.Value == "Default" then
SoundService.PlayerHit2.SoundId = "rbxassetid://9114487369"
SoundService.PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Gamesense" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://4817809188"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "CS:GO" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://6937353691"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Among Us" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://5700183626"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Neverlose" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://8726881116"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "TF2 Critical" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://296102734"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Mario" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://2815207981"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Rust" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://1255040462"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Call of Duty" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://5952120301"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Steve" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://4965083997"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Bamboo" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://3769434519"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "Minecraft" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://4018616850"
game:GetService("SoundService").PlayerHit2.Playing = true
end
 
if Options.Hit.Value == "TF2" then
game:GetService("SoundService").PlayerHit2.SoundId = "rbxassetid://2868331684"
game:GetService("SoundService").PlayerHit2.Playing = true
end
end)
 
CustomHitsoundsTab:AddSlider('Volume_Slider', {Text = 'Volume', Default = 5, Min = 0, Max = 10, Rounding = 1, Compact = true,}):OnChanged(function(vole)
SoundService.PlayerHit2.Volume = vole
end)
 
CustomHitsoundsTab:AddSlider('Pitch_Slider', {Text = 'Volume', Default = 1, Min = 0, Max = 2, Rounding = 1, Compact = true,}):OnChanged(function(piche)
SoundService.PlayerHit2.Pitch = piche
end)
 
CustomHitsoundsTab:AddInput('BodyHitPlaecHolder', {Default = 'rbxassetid://', Numeric = false, Finished = false, Text = 'Custom Hitsounds', Placeholder = 'rbxassetid://'})
game:GetService("SoundService").PlayerHit2.SoundId = Options.BodyHitPlaecHolder.Value
 
--// Bullet Modifications
 
local GunmodsTabBox = Tabs.CombatTab:AddLeftTabbox('Bullet Tracers')
local GunModsTab = GunmodsTabBox:AddTab('Bullet Tracers')
 
GunModsTab:AddToggle('Bob1231', {
Text = "Enabled",
Default = false,
Tooltip = "Enables Bullet Mods",
}):OnChanged(function()
end)
 
GunModsTab:AddSlider('Trail_Lifetime', {Text = 'Lifetime', Suffix = "%", Default = 0.15, Min = 0.15, Max = 20, Rounding = 2, Compact = true}):OnChanged(function(a2trappy)
game:GetService("ReplicatedStorage").Arrow.Trail.Lifetime = a2trappy
game:GetService("ReplicatedStorage").Bullet.Trail.Lifetime = a2trappy
game:GetService("ReplicatedStorage").Laser.Trail.Lifetime = a2trappy
end)
 
--* Hitbox Expander *--
 
local PlayerModsTabBox = Tabs.CombatTab:AddLeftTabbox('Hitbox Expander')
local PlayerModsTab = PlayerModsTabBox:AddTab('Hitbox Expander')
 
--// Player Mods
 
local HedsOn = Instance.new("Part")
HedsOn.Name = "HedsOn"
HedsOn.Anchored = false
HedsOn.CanCollide = false
HedsOn.Transparency = 1
HedsOn.Size = Vector3.new(4, 7, 3)
HedsOn.Parent = game.ReplicatedStorage
 
local HTTransparency = 1
local XSize = 2.5
local YSize = 7.5
local ZSize = 2.5
 
PlayerModsTab:AddToggle('Bht', {
Text = 'Hitbox Expander',
Default = false,
Tooltip = 'Hitbox Expander Toggle'
})
Toggles.Bht:OnChanged(function(HeadExtends)
if HeadExtends == true then
for v, i in pairs(game:GetService("Workspace"):GetChildren()) do
  if i:FindFirstChild("Humanoid") then
    if i:FindFirstChild("HumanoidRootPart") then
      if not i:FindFirstChild("HedsOn") then
        if i ~= game.Players.LocalPlayer.Character then
          local BigHeadsPart = Instance.new("Part")
          BigHeadsPart.Name = "Torso"
          BigHeadsPart.Anchored = false
          BigHeadsPart.CanCollide = false
          BigHeadsPart.Transparency = HTTransparency
          BigHeadsPart.Size = Vector3.new(XSize, YSize, ZSize)
 
          local HeadsParts = BigHeadsPart:Clone()
          HeadsParts.Parent = i
          HeadsParts.Orientation = i.HumanoidRootPart.Orientation
 
          local HedsOn = HedsOn:Clone()
          HedsOn.Parent = i
 
          local Headswelding = Instance.new("Weld")
          Headswelding.Parent = HeadsParts
          Headswelding.Part0 = i.HumanoidRootPart
          Headswelding.Part1 = HeadsParts
 
          HeadsParts.Position = Vector3.new(i.HumanoidRootPart.Position.X,i.HumanoidRootPart.Position.Y - 0.4, i.HumanoidRootPart.Position.Z)
        end
      end
    end
  end
end
else
if HeadExtends == false then
  for v, i in pairs(game:GetService("Workspace"):GetChildren()) do
    if i:FindFirstChild("Humanoid") then
      if i:FindFirstChild("HumanoidRootPart") then
        if i:FindFirstChild("HedsOn") then
          i.HedsOn:Remove()
          for x,a in pairs(i:GetChildren()) do
            if a.Name == "Torso" then
              if not a:FindFirstChild("Nametag") and not a:FindFirstChild("Face") then
                a:Remove()
              end
            end
          end
        end
      end
    end
  end
end
end
end)
 
PlayerModsTab:AddSlider('Transparency_Slider', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 1, Compact = true,}):OnChanged(function(HT)
HTTransparency = HT
end)
 
PlayerModsTab:AddSlider('XSize_Slider', {Text = 'Horizontal Size', Suffix = "studs", Default = 2.5, Min = 0, Max = 2.5, Rounding = 1, Compact = true,}):OnChanged(function(t)
XSize = t
end)
 
PlayerModsTab:AddSlider('YSize_Slider', {Text = 'Vertical Size', Suffix = "studs", Default = 5, Min = 0, Max = 5, Rounding = 1, Compact = true,}):OnChanged(function(t)
YSize = t
end)
 
PlayerModsTab:AddSlider('ZSize_Slider', {Text = 'Width Size', Suffix = "studs", Default = 2.5, Min = 0, Max = 2.5, Rounding = 1, Compact = true,}):OnChanged(function(t)
ZSize = t
end)
 
--* Functions, scripts, other *--
 
--// Ore Esp
 
if game.PlaceId ~= 9570110925 then
print("Incorrect Game")
return
end
repeat
task.wait()
until game:IsLoaded()
local settings = _G.Settings
if settings == nil then
return
end
local function worldtoviewport(position)
local a, b = workspace.CurrentCamera:WorldToViewportPoint(position)
return Vector2.new(a.X, a.Y), b
end
local function add_esp(part, text, colour, toggle)
if not toggle then
  return
end
local drawing_text = Drawing.new("Text")
drawing_text.Outline = true
drawing_text.Center = true
drawing_text.Visible = false
drawing_text.Font = 2
drawing_text.Size = 11
drawing_text.Color = colour
local rendersteploop =
game:GetService("RunService").Stepped:connect(
function()
  pcall(
  function()
    if not part:IsDescendantOf(workspace) or not settings then
      drawing_text:Remove()
      rendersteploop:Disconnect()
    end
    local part_pos = part.Position
    local screen_pos, on_screen = worldtoviewport(part_pos)
    if not on_screen or _G.Shitter == false then
      drawing_text.Visible = false
      rendersteploop:Disconnect()
    end
 
 
    drawing_text.Visible = true
    drawing_text.Text = text
    drawing_text.Position = screen_pos
    rendersteploop:Disconnect()
  end
  )
end
)
end
local function filter_models(v)
 
if (not v:IsA("Model")) then
  return
end
local is_part = v:FindFirstChild("Part")
local children = v:GetChildren()
local child_amount = #children
if is_part then
  if child_amount == 1 then
    add_esp(is_part, "Stone", settings.stone.colour, settings.stone.enabled)
  elseif child_amount == 2 then
    for _, v in pairs(children) do
      local brickcolor = v.BrickColor
      local is_ore = v.ClassName == "MeshPart" and v.Name == "Part"
      if is_ore then
        if brickcolor == BrickColor.new("Institutional white") then
          add_esp(v, "Nitrate", settings.nitrate.colour, settings.nitrate.enabled)
        elseif brickcolor == BrickColor.new("Burlap") then
          add_esp(v, "Iron", settings.iron.colour, settings.iron.enabled)
        end
      end
    end
  end
end
end
for index, model in pairs(workspace:GetChildren()) do
filter_models(model)
end
 
workspace.ChildAdded:Connect(
function(model)
filter_models(model)
end
)
 
-- Military Crates </>
 
local parts = workspace:GetDescendants()
local meshes = {}
for _, part in ipairs(parts) do
if part:IsA("Part") and part.BrickColor == BrickColor.new("Medium green") and part.Material == Enum.Material.WoodPlanks then
  local MilitaryEsp = Instance.new("BoxHandleAdornment")
  MilitaryEsp.Adornee = part
  MilitaryEsp.AlwaysOnTop = true
  MilitaryEsp.ZIndex = 0
  MilitaryEsp.Size = part.Size
  MilitaryEsp.Transparency = 0.3
  MilitaryEsp.Color = BrickColor.new("Bright green")
  MilitaryEsp.Parent = workspace
end
end
 
local function onPartAdded(part)
if part:IsA("Part") and part.BrickColor == BrickColor.new("Medium green") and part.Material == Enum.Material.WoodPlanks then
  local UpdateMilitaryEsp = Instance.new("BoxHandleAdornment")
  UpdateMilitaryEsp.Adornee = part
  UpdateMilitaryEsp.AlwaysOnTop = true
  UpdateMilitaryEsp.ZIndex = 0
  UpdateMilitaryEsp.Size = part.Size
  UpdateMilitaryEsp.Transparency = 0.3
  UpdateMilitaryEsp.Color = BrickColor.new("Bright green")
  UpdateMilitaryEsp.Parent = workspace
end
end
workspace.DescendantAdded:Connect(onPartAdded)
 
-- Part Crates </>
 
local parts = workspace:GetDescendants()
local meshes = {}
for _, part in ipairs(parts) do
if part:IsA("UnionOperation") and part.BrickColor == BrickColor.new("Cashmere") and part.Material == Enum.Material.Plastic then
  local PartCrateEsp = Instance.new("BoxHandleAdornment")
  PartCrateEsp.Adornee = part
  PartCrateEsp.AlwaysOnTop = true
  PartCrateEsp.ZIndex = 0
  PartCrateEsp.Size = part.Size
  PartCrateEsp.Transparency = 0.3
  PartCrateEsp.Color = BrickColor.new("Bright yellow")
  PartCrateEsp.Parent = workspace
end
end
 
local function onPartAdded(part)
if part:IsA("UnionOperation") and part.BrickColor == BrickColor.new("Cashmere") and part.Material == Enum.Material.Plastic then
  local UpdatePartCrateEsp = Instance.new("BoxHandleAdornment")
  UpdatePartCrateEsp.Adornee = part
  UpdatePartCrateEsp.AlwaysOnTop = true
  UpdatePartCrateEsp.ZIndex = 0
  UpdatePartCrateEsp.Size = part.Size
  UpdatePartCrateEsp.Transparency = 0.3
  UpdatePartCrateEsp.Color = BrickColor.new("Bright yellow")
  UpdatePartCrateEsp.Parent = workspace
end
end
workspace.DescendantAdded:Connect(onPartAdded)
 
-- Vending Machine </>
 
local parts = workspace:GetDescendants()
local meshes = {}
for _, part in ipairs(parts) do
if part:IsA("UnionOperation") and part.BrickColor == BrickColor.new("Medium brown") and part.Material == Enum.Material.Plastic then
  local VendingMachineEsp = Instance.new("BoxHandleAdornment")
  VendingMachineEsp.Adornee = part
  VendingMachineEsp.AlwaysOnTop = true
  VendingMachineEsp.ZIndex = 0
  VendingMachineEsp.Size = part.Size
  VendingMachineEsp.Transparency = 0.3
  VendingMachineEsp.Color = BrickColor.new("Black")
  VendingMachineEsp.Parent = workspace
end
end
 
local function onPartAdded(part)
if part:IsA("UnionOperation") and part.BrickColor == BrickColor.new("Medium brown") and part.Material == Enum.Material.Plastic then
  local UpdateVendingMachineEsp = Instance.new("BoxHandleAdornment")
  UpdateVendingMachineEsp.Adornee = part
  UpdateVendingMachineEsp.AlwaysOnTop = true
  UpdateVendingMachineEsp.ZIndex = 0
  UpdateVendingMachineEsp.Size = part.Size
  UpdateVendingMachineEsp.Transparency = 0.3
  UpdateVendingMachineEsp.Color = BrickColor.new("Black")
  UpdateVendingMachineEsp.Parent = workspace
end
end
workspace.DescendantAdded:Connect(onPartAdded)
 
-- TCs </>
 
local UserInputService = game:GetService("UserInputService")
local TCESPs = {}
local adorned = false
 
local function addAdornments()
local parts = workspace:GetDescendants()
for _, part in ipairs(parts) do
  if part:IsA("UnionOperation") and part.Name == "State" and part.Material == Enum.Material.Neon then
    local TCESP = Instance.new("BoxHandleAdornment")
    TCESP.Adornee = part
    TCESP.AlwaysOnTop = true
    TCESP.ZIndex = 0
    TCESP.Size = Vector3.new(2.5, 6.25, 2.5)
    TCESP.Transparency = 0.3
    TCESP.Color = BrickColor.new("Royal purple")
    TCESP.Parent = workspace
    TCESP.CFrame = CFrame.new(0, -2.2, 0)
    table.insert(TCESPs, TCESP)
  end
end
end
 
local function removeAdornments()
for _, TCESP in ipairs(TCESPs) do
  TCESP:Destroy()
end
TCESPs = {}
end
 
local function toggleAdornments()
if adorned then
  removeAdornments()
  adorned = false
else
  addAdornments()
  adorned = true
end
end
 
UserInputService.InputBegan:Connect(function(input, gameProcessed)
if input.KeyCode == Enum.KeyCode.Y and not gameProcessed then
toggleAdornments()
end
end)
 
--------------------------------------------------------------------------------------------------
 
--Visuals Shit
local VisualsTabBox = Tabs.VisualsTab:AddLeftTabbox('Player Visuals')
local PlayerESPTab = VisualsTabBox:AddTab('Enemies')
local GameESPTab = VisualsTabBox:AddTab('Game')
local PlayerESPSettingsTab = VisualsTabBox:AddTab('Settings')
 
getgenv().EnabledCombatWeapons = nil
 
PlayerESPTab:AddToggle('Enabled69', {
Text = 'Enabled',
Default = false, -- Default value (true / false)
Tooltip = 'Enables ESP', -- Information shown when you hover over the toggle
EnabledCombatWeapons = CombatWeapons
}):OnChanged(function(CombatWeapons)
end)
 
PlayerESPTab:AddSlider('Esp_Distancce', {Text = 'Distance:', Suffix = "studs", Default = 1000, Min = 0, Max = 10000, Rounding = 0, Compact = true}):OnChanged(function()
if CombatWeapons then
end
end)
 
--// Player Visuals \\--
 
PlayerESPTab:AddToggle('Proximi123',{
Text = 'Player',
Default = false,
Tooltip = 'Player ESP',
}):AddColorPicker("NameEsp_Color", {Default = Color3.fromRGB(255,255,255)}):OnChanged(function(x2trappy)
Config.Esp.Names = x2trappy
Config.Esp.NamesOutline = x2trappy
end)
 
Options.NameEsp_Color:OnChanged(function(p_state)
Config.Esp.NamesColor = p_state
end)
 
PlayerESPTab:AddToggle('Ezas1231',{
Text = 'Box',
Default = false,
Tooltip = 'Box ESP',
}):AddColorPicker("BoxEsp_Color", {Default = Color3.fromRGB(255,255,255)}):OnChanged(function(xix)
Config.Esp.Box = xix
end)
 
Options.BoxEsp_Color:OnChanged(function(p_state69)
Config.Esp.BoxColor = p_state69
end)
 
PlayerESPTab:AddToggle('SussyJohn123',{
Text = 'Filled Box',
Default = false,
Tooltip = 'Fills Boxes',
}):OnChanged(function(x)
Config.Esp.BoxFilled = x
end)
 
PlayerESPTab:AddSlider('BOX_Transparency', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function(a2trappy)
Config.Esp.BoxTransparency = a2trappy
end)
 
--// Skeleton ESP \\--
 
local SkeletonColor = Color3.fromRGB(225, 225, 225) -- put your color changer stuff here
local Skeletons = nil
 
PlayerESPTab:AddToggle('MyToggle', {
Text = 'Skeleton',
Default = false, -- Default value (true / false)
Tooltip = 'On / Off', -- Information shown when you hover over the toggle
}):AddColorPicker('SkeletonColor', {
Default = Color3.new(0, 1, 0),
Title = 'Color',
})
Options.SkeletonColor:OnChanged(function(Color)
SkeletonColor = Color
end)
 
local camera = workspace.CurrentCamera
local function DrawDrop(drop)
 
local DropText = Drawing.new("Line")
DropText.Visible = false
DropText.From = Vector2.new(0, 0)
DropText.To = Vector2.new(200, 200)
DropText.Color = SkeletonColor
DropText.Thickness = 1
local DropText1 = Drawing.new("Line")
DropText1.Visible = false
DropText1.From = Vector2.new(0, 0)
DropText1.To = Vector2.new(0, 0)
DropText1.Color = SkeletonColor
DropText1.Thickness = 1
local DropText2 = Drawing.new("Line")
DropText2.Visible = false
DropText2.From = Vector2.new(0, 0)
DropText2.To = Vector2.new(0, 0)
DropText2.Color = SkeletonColor
DropText2.Thickness = 1
local DropText3 = Drawing.new("Line")
DropText3.Visible = false
DropText3.From = Vector2.new(0, 0)
DropText3.To = Vector2.new(0, 0)
DropText3.Color = SkeletonColor
DropText3.Thickness = 1
local DropText4 = Drawing.new("Line")
DropText4.Visible = false
DropText4.From = Vector2.new(0, 0)
DropText4.To = Vector2.new(0, 0)
DropText4.Color = SkeletonColor
DropText4.Thickness = 1
local DropText5 = Drawing.new("Line")
DropText5.Visible = false
DropText5.From = Vector2.new(0, 0)
DropText5.To = Vector2.new(0, 0)
DropText5.Color = SkeletonColor
DropText5.Thickness = 1
local DropText6 = Drawing.new("Line")
DropText6.Visible = false
DropText6.From = Vector2.new(0, 0)
DropText6.To = Vector2.new(0, 0)
DropText6.Color = SkeletonColor
DropText6.Thickness = 1
local DropText7 = Drawing.new("Line")
DropText7.Visible = false
DropText7.From = Vector2.new(0, 0)
DropText7.To = Vector2.new(0, 0)
DropText7.Color = SkeletonColor
DropText7.Thickness = 1
local DropText8 = Drawing.new("Line")
DropText8.Visible = false
DropText8.From = Vector2.new(0, 0)
DropText8.To = Vector2.new(0, 0)
DropText8.Color = SkeletonColor
DropText8.Thickness = 1
local DropText9 = Drawing.new("Line")
DropText9.Visible = false
DropText9.From = Vector2.new(0, 0)
DropText9.To = Vector2.new(0, 0)
DropText9.Color = SkeletonColor
DropText9.Thickness = 1
local DropText10 = Drawing.new("Line")
DropText10.Visible = false
DropText10.From = Vector2.new(0, 0)
DropText10.To = Vector2.new(0, 0)
DropText10.Color = SkeletonColor
DropText10.Thickness = 1
local DropText11 = Drawing.new("Line")
DropText11.Visible = false
DropText11.From = Vector2.new(0, 0)
DropText11.To = Vector2.new(0, 0)
DropText11.Color = SkeletonColor
DropText11.Thickness = 1
local DropText12 = Drawing.new("Line")
DropText12.Visible = false
DropText12.From = Vector2.new(0, 0)
DropText12.To = Vector2.new(0, 0)
DropText12.Color = SkeletonColor
DropText12.Thickness = 1
 
local function UPDATER()
local c
c = game:GetService("RunService").RenderStepped:Connect(function()
if drop and workspace:FindFirstChild(drop.Name) and drop:FindFirstChild("Head") and drop:FindFirstChild("RightFoot") then
  local dropvector, onscreen = camera:WorldToViewportPoint(drop.Head.Position)
  local dropvector1, onscreen = camera:WorldToViewportPoint(drop.LowerTorso.Position)
  local dropvector2, onscreen = camera:WorldToViewportPoint(drop.UpperTorso.Position)
  local dropvector3, onscreen = camera:WorldToViewportPoint(drop.LeftUpperArm.Position)
  local dropvector4, onscreen = camera:WorldToViewportPoint(drop.LeftLowerArm.Position)
  local dropvector5, onscreen = camera:WorldToViewportPoint(drop.LeftHand.Position)
  local dropvector6, onscreen = camera:WorldToViewportPoint(drop.RightUpperArm.Position)
  local dropvector7, onscreen = camera:WorldToViewportPoint(drop.RightLowerArm.Position)
  local dropvector8, onscreen = camera:WorldToViewportPoint(drop.RightHand.Position)
  local dropvector9, onscreen = camera:WorldToViewportPoint(drop.LeftUpperLeg.Position)
  local dropvector10, onscreen = camera:WorldToViewportPoint(drop.LeftLowerLeg.Position)
  local dropvector11, onscreen = camera:WorldToViewportPoint(drop.LeftFoot.Position)
  local dropvector12, onscreen = camera:WorldToViewportPoint(drop.RightUpperLeg.Position)
  local dropvector13, onscreen = camera:WorldToViewportPoint(drop.RightLowerLeg.Position)
  local dropvector14, onscreen = camera:WorldToViewportPoint(drop.RightFoot.Position)
  local distance = (game.Workspace.Ignore.LocalCharacter.Middle.Position - drop.Head.Position).magnitude
  if Toggles.MyToggle.Value and onscreen and Options.Esp_Distancce.Value > distance then -- put ur toggle thing in here
    DropText.From = Vector2.new(dropvector.X, dropvector.Y)
    DropText.To = Vector2.new(dropvector1.X, dropvector1.Y)
    DropText.Color = SkeletonColor
    DropText.Visible = true
    DropText1.From = Vector2.new(dropvector2.X, dropvector2.Y)
    DropText1.To = Vector2.new(dropvector3.X, dropvector3.Y)
    DropText1.Color = SkeletonColor
    DropText1.Visible = true
    DropText2.From = Vector2.new(dropvector3.X, dropvector3.Y)
    DropText2.To = Vector2.new(dropvector4.X, dropvector4.Y)
    DropText2.Color = SkeletonColor
    DropText2.Visible = true
    DropText3.From = Vector2.new(dropvector4.X, dropvector4.Y)
    DropText3.To = Vector2.new(dropvector5.X, dropvector5.Y)
    DropText3.Color = SkeletonColor
    DropText3.Visible = true
    DropText4.From = Vector2.new(dropvector2.X, dropvector2.Y)
    DropText4.To = Vector2.new(dropvector6.X, dropvector6.Y)
    DropText4.Color = SkeletonColor
    DropText4.Visible = true
    DropText5.From = Vector2.new(dropvector6.X, dropvector6.Y)
    DropText5.To = Vector2.new(dropvector7.X, dropvector7.Y)
    DropText5.Color = SkeletonColor
    DropText5.Visible = true
    DropText6.From = Vector2.new(dropvector7.X, dropvector7.Y)
    DropText6.To = Vector2.new(dropvector8.X, dropvector8.Y)
    DropText6.Color = SkeletonColor
    DropText6.Visible = true
    DropText7.From = Vector2.new(dropvector1.X, dropvector1.Y)
    DropText7.To = Vector2.new(dropvector9.X, dropvector9.Y)
    DropText7.Color = SkeletonColor
    DropText7.Visible = true
    DropText8.From = Vector2.new(dropvector9.X, dropvector9.Y)
    DropText8.To = Vector2.new(dropvector10.X, dropvector10.Y)
    DropText8.Color = SkeletonColor
    DropText8.Visible = true
    DropText9.From = Vector2.new(dropvector10.X, dropvector10.Y)
    DropText9.To = Vector2.new(dropvector11.X, dropvector11.Y)
    DropText9.Color = SkeletonColor
    DropText9.Visible = true
    DropText10.From = Vector2.new(dropvector1.X, dropvector1.Y)
    DropText10.To = Vector2.new(dropvector12.X, dropvector12.Y)
    DropText10.Color = SkeletonColor
    DropText10.Visible = true
    DropText11.From = Vector2.new(dropvector12.X, dropvector12.Y)
    DropText11.To = Vector2.new(dropvector13.X, dropvector13.Y)
    DropText11.Color = SkeletonColor
    DropText11.Visible = true
    DropText12.From = Vector2.new(dropvector13.X, dropvector13.Y)
    DropText12.To = Vector2.new(dropvector14.X, dropvector14.Y)
    DropText12.Color = SkeletonColor
    DropText12.Visible = true
  else
    DropText.Visible = false
    DropText1.Visible = false
    DropText2.Visible = false
    DropText3.Visible = false
    DropText4.Visible = false
    DropText5.Visible = false
    DropText6.Visible = false
    DropText7.Visible = false
    DropText8.Visible = false
    DropText9.Visible = false
    DropText10.Visible = false
    DropText11.Visible = false
    DropText12.Visible = false
  end
else
  if game:GetService("Workspace"):FindFirstChild(drop.Name) == nil then
    c:Disconnect()
  end
  DropText.Visible = false
  DropText1.Visible = false
  DropText2.Visible = false
  DropText3.Visible = false
  DropText4.Visible = false
  DropText5.Visible = false
  DropText6.Visible = false
  DropText7.Visible = false
  DropText8.Visible = false
  DropText9.Visible = false
  DropText10.Visible = false
  DropText11.Visible = false
  DropText12.Visible = false
end
end)
end
coroutine.wrap(UPDATER)()
end
for i,drop in pairs(workspace:GetChildren()) do
if drop:FindFirstChild("Head") and drop:FindFirstChild("RightFoot") then
coroutine.wrap(DrawDrop)(drop)
end
end
 
workspace.ChildAdded:Connect(function(drop)
if drop:FindFirstChild("Head") and drop:FindFirstChild("RightFoot") then
coroutine.wrap(DrawDrop)(drop)
end
end)
 
--// Chams
 
local function isR15Part(part)
if not part:IsA("BasePart") then
return false
end
 
local humanoid = part.Parent:FindFirstChildWhichIsA("Humanoid")
if not humanoid then
return false
end
 
local rigType = humanoid.RigType
if rigType ~= Enum.HumanoidRigType.R15 then
return false
end
 
local ignoreFolder = workspace:FindFirstChild("Ignore")
if ignoreFolder and part:IsDescendantOf(ignoreFolder) then
return false
end
 
return true
end
 
local function adornPart(part)
local adornment = Instance.new("BoxHandleAdornment")
adornment.Adornee = part
adornment.AlwaysOnTop = true
adornment.ZIndex = 1
adornment.Size = part.Size
adornment.Color = BrickColor.new("Institutional white")
adornment.Transparency = 0.6
adornment.Name = 'esp_part'
adornment.Parent = part
end
 
local function onDescendantAdded(descendant)
if isR15Part(descendant) then
adornPart(descendant)
end
end
 
local function adornR15Parts()
local parts = workspace:GetDescendants()
for _, part in ipairs(parts) do
if isR15Part(part) then
  adornPart(part)
end
end
end
 
local function remove()
local parts = workspace:GetDescendants()
for _, part in ipairs(parts) do
if part.Name == 'esp_part' then
  part:Destroy()
end
end
end
 
 
PlayerESPTab:AddToggle('ESP', {Text = 'Chams', Default = false}):AddColorPicker("Chams_COlor", {Default = Color3.fromRGB(255, 255, 255)}):OnChanged(function(boolean)
if boolean then
adornR15Parts()
else
remove()
end
end)
 
game.Workspace.DescendantAdded:Connect(function(v)
if Toggles.ESP.Value then
onDescendantAdded(v)
end
end)
 
--* Ore ESP *--
 
GameESPTab:AddToggle('ORE_ESP', {Text = 'Ore', Default = false}):OnChanged(function(x)
_G.Shitter = x
end)
 
--* Settings *--
 
PlayerESPTab:AddDivider()
 
--// Settings \\--
 
PlayerESPTab:AddToggle('rainbow_esp', {Text = 'Rainbow', Default = false}):OnChanged(function(xpoo12)
if xpoo12 == true then
game:GetService('RunService'):BindToRenderStep("Rainbow", 0 , function()
local success, err = pcall(function()
Config.Esp.BoxColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
Config.Esp.HealthBarColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
Config.Esp.NamesColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
end)
end)
elseif xpoo12 == false then
game:GetService('RunService'):UnbindFromRenderStep("Rainbow")
Config.Esp.BoxColor = Color3.fromRGB(255,255,255)
Config.Esp.HealthBarColor = Color3.fromRGB(255,255,255)
Config.Esp.NamesColor = Color3.fromRGB(255,255,255)
end
end)
 
PlayerESPTab:AddToggle('NameOutlines', {Text = 'Show Outlines', Default = true}):OnChanged(function(NameOutlines)
if NameOutlines == true then
Config.Esp.NamesOutline = true
elseif NameOutlines == false then
Config.Esp.NamesOutline = false
end
end)
 
PlayerESPSettingsTab:AddToggle('zzzEzas1121231',{
Text = 'Box Outline',
Default = false,
Tooltip = 'Box Outline',
}):AddColorPicker("BoxEsp_OutlineColor", {Default = Color3.fromRGB(0,0,0)}):OnChanged(function(xix)
Config.Esp.BoxOutline = xix
end)
 
PlayerESPSettingsTab:AddSlider('PlayerESP_FontSize', {Text = 'Font Size', Default = 11, Min = 0, Max = 100, Rounding = 0, Compact = false}):OnChanged(function(sussystuff1)
Config.Esp.NamesSize = sussystuff1
end)
 
PlayerESPSettingsTab:AddDropdown('PlayerESP_FontFamily', {Values = { 'UI', 'System', 'Plex', 'Monospace' }, Default = 3, Multi = false, Text = 'Font Family'}):OnChanged(function()
if Options.PlayerESP_FontFamily.Value == "UI" then
Config.Esp.NamesFont = 1
elseif Options.PlayerESP_FontFamily.Value == "System" then
Config.Esp.NamesFont = 2
elseif Options.PlayerESP_FontFamily.Value == "Plex" then
Config.Esp.NamesFont = 3
elseif Options.PlayerESP_FontFamily.Value == "Monospace" then
Config.Esp.NamesFont = 4
end
end)
 
--* Crosshair 1 *--
 
local CrosshairTabBox = Tabs.VisualsTab:AddRightTabbox('Crosshairs')
local CrosshairXTab = CrosshairTabBox:AddTab('Crosshair 1')
local Crosshair69Tab = CrosshairTabBox:AddTab('Crosshair 2')
 
--// Crosshair 1
local CrossHairX = Drawing.new("Circle")
CrossHairX.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
CrossHairX.Color = Color3.fromRGB(98, 37, 209)
CrossHairX.Transparency = 1
CrossHairX.Thickness = 0
CrossHairX.NumSides = 64
CrossHairX.Radius = 4
CrossHairX.Visible = false
CrossHairX.Filled = false
 
do
CrosshairXTab:AddToggle('zCrosshairX_Toggle', {Text = 'Toggle', Default = false}):AddColorPicker("eCrosshairX_Color", {Default = Color3.fromRGB(98, 37, 209)}):OnChanged(function()
CrossHairX.Visible = Toggles.zCrosshairX_Toggle.Value
CrossHairX.Visible = Toggles.zCrosshairX_Toggle.Value
end)
 
Options.eCrosshairX_Color:OnChanged(function()
CrossHairX.Color = Options.eCrosshairX_Color.Value
CrossHairX.Color = Options.eCrosshairX_Color.Value
end)
 
CrosshairXTab:AddToggle('Crosshair_Filled1', {Text = 'Filled', Default = false}):OnChanged(function()
CrossHairX.Filled = Toggles.Crosshair_Filled1.Value
CrossHairX.Filled = Toggles.Crosshair_Filled1.Value
end)
 
CrosshairXTab:AddToggle('Rainbow_Crosshair1', {Text = 'Rainbow', Default = false}):OnChanged(function(rbcrosshair1)
if rbcrosshair1 == true then
game:GetService('RunService'):BindToRenderStep("Rainbow2", 0 , function()
local success, err = pcall(function()
CrossHairX.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
end)
end)
elseif rbcrosshair1 == false then
game:GetService('RunService'):UnbindFromRenderStep("Rainbow2")
CrossHairX.Color = Color3.fromRGB(98, 37, 209)
end
end)
 
CrosshairXTab:AddSlider('Crosshair_Radius', {Text = 'Size', Suffix = "px", Default = 3, Min = 0, Max = 100, Rounding = 0, Compact = true}):OnChanged(function(CrosshairXRadius)
CrossHairX.Radius = CrosshairXRadius
end)
 
CrosshairXTab:AddSlider('Crosshair_Sides', {Text = 'Sides', Suffix = "Â°", Default = 64, Min = 0, Max = 64, Rounding = 0, Compact = true}):OnChanged(function(CrossHairXNumSides)
CrossHairX.NumSides = CrossHairXNumSides
end)
 
CrosshairXTab:AddSlider('Crosshair_Thickness', {Text = 'Thickness', Suffix = "Â°", Default = 0, Min = 0, Max = 25, Rounding = 0, Compact = true}):OnChanged(function(CrossHairXThickness)
CrossHairX.Thickness = CrossHairXThickness
end)
 
CrosshairXTab:AddSlider('Crosshair_Transparency1', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function()
CrossHairX.Transparency = Options.Crosshair_Transparency1.Value
end)
end
 
--* Crosshair 2 *--
 
--// Crosshair 2
local Crosshair_Horizontal = drawing_new("Line")
Crosshair_Horizontal.Visible = false
Crosshair_Horizontal.Thickness = 1
Crosshair_Horizontal.Transparency = 1
Crosshair_Horizontal.From = vector2_new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
Crosshair_Horizontal.To = vector2_new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
Crosshair_Horizontal.Color = color3_fromrgb(255, 0, 0)
 
local Crosshair_Vertical = drawing_new("Line")
Crosshair_Vertical.Visible = false
Crosshair_Vertical.Thickness = 1
Crosshair_Vertical.Transparency = 1
Crosshair_Vertical.From = vector2_new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
Crosshair_Vertical.To = vector2_new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
Crosshair_Vertical.Color = color3_fromrgb(255, 0, 0)
do
Crosshair69Tab:AddToggle('Crosshair_Toggle', {Text = 'Toggle', Default = false}):AddColorPicker("Crosshair_Color", {Default = Color3.fromRGB(255, 0, 0)}):OnChanged(function()
Crosshair_Horizontal.Visible = Toggles.Crosshair_Toggle.Value
Crosshair_Vertical.Visible = Toggles.Crosshair_Toggle.Value
end)
 
Options.Crosshair_Color:OnChanged(function()
Crosshair_Horizontal.Color = Options.Crosshair_Color.Value
Crosshair_Vertical.Color = Options.Crosshair_Color.Value
end)
 
Crosshair69Tab:AddToggle('Rainbow_Crosshair', {Text = 'Rainbow', Default = false}):OnChanged(function(rbcrosshair)
if rbcrosshair == true then
game:GetService('RunService'):BindToRenderStep("Rainbow2", 0 , function()
local success, err = pcall(function()
Crosshair_Horizontal.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
Crosshair_Vertical.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
end)
end)
elseif rbcrosshair == false then
game:GetService('RunService'):UnbindFromRenderStep("Rainbow2")
Crosshair_Horizontal.Color = Color3.fromRGB(255, 0, 0)
Crosshair_Vertical.Color = Color3.fromRGB(255, 0, 0)
end
end)
 
Crosshair69Tab:AddSlider('Crosshair_Size', {Text = 'Size', Suffix = "px", Default = 2.2, Min = 0, Max = 100, Rounding = 1, Compact = true}):OnChanged(function()
Crosshair_Horizontal.From = vector2_new(camera.ViewportSize.X / 2 - Options.Crosshair_Size.Value, camera.ViewportSize.Y / 2)
Crosshair_Horizontal.To = vector2_new(camera.ViewportSize.X / 2 + Options.Crosshair_Size.Value, camera.ViewportSize.Y / 2)
Crosshair_Vertical.From = vector2_new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2 - Options.Crosshair_Size.Value)
Crosshair_Vertical.To = vector2_new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2 + Options.Crosshair_Size.Value)
end)
 
Crosshair69Tab:AddSlider('Crosshair_Thickness', {Text = 'Thickness', Suffix = "px", Default = 2, Min = 0.5, Max = 25, Rounding = 1, Compact = true}):OnChanged(function()
Crosshair_Horizontal.Thickness = Options.Crosshair_Thickness.Value
Crosshair_Vertical.Thickness = Options.Crosshair_Thickness.Value
end)
 
Crosshair69Tab:AddSlider('Crosshair_Transparency', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function()
Crosshair_Horizontal.Transparency = Options.Crosshair_Transparency.Value
Crosshair_Vertical.Transparency = Options.Crosshair_Transparency.Value
end)
end
 
--* Field of View *--
 
local FieldOfViewTabBox = Tabs.VisualsTab:AddRightTabbox('Field of View')
local FieldOfViewTab = FieldOfViewTabBox:AddTab('Field of View')
 
--Camera Tab
do
FieldOfViewTab:AddToggle('Camera_FOVToggle', {Text = 'Field of View', Default = false})
FieldOfViewTab:AddSlider('Camera_FOVValue', {Text = 'FOV: ', Default = 70, Min = 0, Max = 120, Rounding = 0, Compact = true})
 
Toggles.Camera_FOVToggle:OnChanged(function()
if Toggles.Camera_FOVToggle.Value then
camera.FieldOfView = Options.Camera_FOVValue.Value
else
camera.FieldOfView = 70
end
end)
 
Options.Camera_FOVValue:OnChanged(function()
if Toggles.Camera_FOVToggle.Value then
camera.FieldOfView = Options.Camera_FOVValue.Value
end
end)
 
FieldOfViewTab:AddToggle('Camera_ZoomToggle', {Text = 'Enable Zoom', Default = false}):AddKeyPicker('Camera_ZoomHolding', {Default = 'Z', SyncToggleState = false, Mode = 'Hold', Text = 'Zoom Keybind', NoUI = false,})
FieldOfViewTab:AddSlider('Camera_ZoomValue', {Text = 'Zoom FOV: ', Default = 30, Min = 0, Max = 120, Rounding = 0, Compact = true})
end
 
LPH_NO_VIRTUALIZE(function()
camera:GetPropertyChangedSignal("FieldOfView"):Connect(function()
if Toggles.Camera_FOVToggle.Value then
camera.FieldOfView = Options.Camera_FOVValue.Value
end
 
if Toggles.Camera_ZoomToggle.Value and Options.Camera_ZoomHolding:GetState() then
camera.FieldOfView = Options.Camera_ZoomValue.Value
end
end)
end)()
 
--* Arm,Gun Vis *--
 
local ArmVisTabBox = Tabs.VisualsTab:AddLeftTabbox('Arm Visuals')
local ArmVisTab = ArmVisTabBox:AddTab('Arm Visuals')
local GunVisTab = ArmVisTabBox:AddTab('Gun Visuals')
 
--// Arm Visuals
 
ArmVisTab:AddButton('Set Default', function()
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.RightHand.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.LeftHand.BrickColor = BrickColor.new("Linen")
game:GetService("ReplicatedStorage").HandModels.HMAR.Handle.BrickColor = BrickColor.new("Cool yellow")
end)
 
local CARMS = false
 
ArmVisTab:AddToggle('CLRT',{
Text = 'Color Arms',
Default = false,
Tooltip = "Off/On",
}):AddColorPicker('ARCCCC', {
Default = Color3.fromRGB(0,0,0),
Title = 'Arms Color',
})
Options.ARCCCC:OnChanged(function(ARMC)
if CARMS then
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Color = ARMC
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Color = ARMC
game:GetService("Workspace").Ignore.FPSArms.RightHand.Color = ARMC
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Color = ARMC
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Color = ARMC
game:GetService("Workspace").Ignore.FPSArms.LeftHand.Color = ARMC
game:GetService("ReplicatedStorage").HandModels.HMAR.Handle.Color = ARMC
else
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.RightHand.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.BrickColor = BrickColor.new("Linen")
game:GetService("Workspace").Ignore.FPSArms.LeftHand.BrickColor = BrickColor.new("Linen")
game:GetService("ReplicatedStorage").HandModels.HMAR.Handle.BrickColor = BrickColor.new("Cool yellow")
end
end)
 
Toggles.CLRT:OnChanged(function(T)
CARMS = T
end)
 
ArmVisTab:AddDropdown('MaterialD', {
Values = { 'Default', 'ForceField', 'Neon', 'CrackedLava' },
Default = 1,
Multi = false,
Text = 'Arm Material',
Tooltip = 'Arms Material',
}):OnChanged(function()
if Options.MaterialD.Value == "Default" then
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "Plastic"
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "Plastic"
game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "Plastic"
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "Plastic"
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "Plastic"
game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "Plastic"
game:GetService("ReplicatedStorage").HandModels.HMAR.Handle.Material = "Plastic"
end
 
if Options.MaterialD.Value == "ForceField" then
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "ForceField"
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "ForceField"
game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "ForceField"
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "ForceField"
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "ForceField"
game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "ForceField"
game:GetService("ReplicatedStorage").HandModels.HMAR.Handle.Material = "ForceField"
end
 
if Options.MaterialD.Value == "Neon" then
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "Neon"
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "Neon"
game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "Neon"
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "Neon"
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "Neon"
game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "Neon"
game:GetService("ReplicatedStorage").HandModels.HMAR.Handle.Material = "Neon"
end
 
if Options.MaterialD.Value == "CrackedLava" then
game:GetService("Workspace").Ignore.FPSArms.RightUpperArm.Material = "CrackedLava"
game:GetService("Workspace").Ignore.FPSArms.RightLowerArm.Material = "CrackedLava"
game:GetService("Workspace").Ignore.FPSArms.RightHand.Material = "CrackedLava"
game:GetService("Workspace").Ignore.FPSArms.LeftUpperArm.Material = "CrackedLava"
game:GetService("Workspace").Ignore.FPSArms.LeftLowerArm.Material = "CrackedLava"
game:GetService("Workspace").Ignore.FPSArms.LeftHand.Material = "CrackedLava"
game:GetService("ReplicatedStorage").HandModels.HMAR.Handle.Material = "CrackedLava"
end
end)
 
--// Gun Visuals
 
GunVisTab:AddButton('Set Default', function()
-- material
-- hmar
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.Material = Enum.Material.Metal
-- pipesmg
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.Material = Enum.Material.Metal
-- usp
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.USP.Mag.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].Material = Enum.Material.Metal
-- pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].Material = Enum.Material.Metal
-- crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.Material = Enum.Material.CorrodedMetal
-- bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.Material = Enum.Material.Fabric
-- Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.Katana.handle.Material = Enum.Material.Fabric
-- Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.Material = Enum.Material.Wood
-- Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.Material = Enum.Material.Slate
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.Material = Enum.Material.Wood
-- Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.Material = Enum.Material.CorrodedMetal
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.Material = Enum.Material.Wood
-- Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.Material = Enum.Material.DiamondPlate
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.Material = Enum.Material.Wood
-- Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.Material = Enum.Material.CorrodedMetal
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.Material = Enum.Material.Plastic
-- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.Material = Enum.Material.Plastic
-- healing bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.Material = Enum.Material.Snow
-- bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.Material = Enum.Material.Snow
 
-- color
 
-- HMAR
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.BrickColor = BrickColor.new("Dark grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.BrickColor = BrickColor.new("Medium stone grey")
-----PipeSMG
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.BrickColor = BrickColor.new("Medium stone grey")
-----USP
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.BrickColor = BrickColor.new("Lime green")
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.USP.Mag.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].BrickColor = BrickColor.new("Silver flip/flop")
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].BrickColor = BrickColor.new("Dark stone grey")
-----Pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].BrickColor = BrickColor.new("Medium stone grey")
-----Crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.BrickColor = BrickColor.new("Fawn brown")
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.BrickColor = BrickColor.new("Medium stone grey")
-----Bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.BrickColor = BrickColor.new("Fawn brown")
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.BrickColor = BrickColor.new("Beige")
-----Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.BrickColor = BrickColor.new("Lily white")
game:GetService("ReplicatedStorage").HandModels.Katana.handle.BrickColor = BrickColor.new("Institutional white")
-----Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.BrickColor = BrickColor.new("Nougat")
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.BrickColor = BrickColor.new("Nougat")
-----Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.BrickColor = BrickColor.new("Nougat")
-----Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.BrickColor = BrickColor.new("Nougat")
-----Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.BrickColor = BrickColor.new("Nougat")
----- Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.BrickColor = BrickColor.new("Institutional white")
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.BrickColor = BrickColor.new("Medium stone grey")
----- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.BrickColor = BrickColor.new("Cool yellow")
----- Healing Bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.BrickColor = BrickColor.new("Light reddish violet")
----- Bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.BrickColor = BrickColor.new("Khaki")
end)
local GCTG = false
GunVisTab:AddToggle('Tgc',{
Text = 'Gun Color',
Default = false,
Tooltip = "Off/On",
}):AddColorPicker('GunColor', {
Default = Color3.fromRGB(0, 1, 0),
Title = 'Changes gun colors',
})
Options.GunColor:OnChanged(function(GunColor)
if GCTG == true then
-----HMAR
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.Color = GunColor
-----PipeSMG
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.Color = GunColor
-----USP
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.USP.Mag.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].Color = GunColor
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].Color = GunColor
-----Pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].Color = GunColor
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].Color = GunColor
-----Crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.Color = GunColor
-----Bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.Color = GunColor
-----Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Katana.handle.Color = GunColor
-----Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.Color = GunColor
-----Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.Color = GunColor
-----Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.Color = GunColor
-----Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.Color = GunColor
-----Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.Color = GunColor
----- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.Color = GunColor
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.Color = GunColor
----- Healing Bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.Color = GunColor
----- Bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.Color = GunColor
elseif GCTG == false then
-- HMAR
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.BrickColor = BrickColor.new("Dark grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.BrickColor = BrickColor.new("Medium stone grey")
-----PipeSMG
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.BrickColor = BrickColor.new("Medium stone grey")
-----USP
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.BrickColor = BrickColor.new("Lime green")
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.USP.Mag.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].BrickColor = BrickColor.new("Silver flip/flop")
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].BrickColor = BrickColor.new("Dark stone grey")
-----Pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].BrickColor = BrickColor.new("Dark stone grey")
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].BrickColor = BrickColor.new("Medium stone grey")
-----Crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.BrickColor = BrickColor.new("Fawn brown")
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.BrickColor = BrickColor.new("Medium stone grey")
-----Bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.BrickColor = BrickColor.new("Fawn brown")
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].BrickColor = BrickColor.new("Bronze")
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.BrickColor = BrickColor.new("Beige")
-----Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.BrickColor = BrickColor.new("Lily white")
game:GetService("ReplicatedStorage").HandModels.Katana.handle.BrickColor = BrickColor.new("Institutional white")
-----Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.BrickColor = BrickColor.new("Nougat")
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.BrickColor = BrickColor.new("Nougat")
-----Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.BrickColor = BrickColor.new("Nougat")
-----Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.BrickColor = BrickColor.new("Nougat")
-----Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.BrickColor = BrickColor.new("Nougat")
-----Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.BrickColor = BrickColor.new("Institutional white")
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.BrickColor = BrickColor.new("Medium stone grey")
----- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.BrickColor = BrickColor.new("Medium stone grey")
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.BrickColor = BrickColor.new("Cool yellow")
----- Healing Bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.BrickColor = BrickColor.new("Light reddish violet")
----- Bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.BrickColor = BrickColor.new("Khaki")
end
end)
 
Toggles.Tgc:OnChanged(function(Toggle)
GCTG = Toggle
end)
 
GunVisTab:AddDropdown('MaterialV', {
Values = { 'Default', 'ForceField', 'Neon', 'CrackedLava' },
Default = 1,
Multi = false,
Text = 'Gun Material',
Tooltip = 'NOT USEFUL WITH CUSTOM SKINS!',
})
Options.MaterialV:OnChanged(function()
if Options.MaterialV.Value == "Default" then
-----HMAR
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.Material = Enum.Material.Metal
-----PipeSMG
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.Material = Enum.Material.Metal
-----USP
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.USP.Mag.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].Material = Enum.Material.Metal
-----Pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].Material = Enum.Material.Metal
-----Crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.Material = Enum.Material.CorrodedMetal
-----Bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.Material = Enum.Material.Fabric
-- Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.Material = Enum.Material.Metal
game:GetService("ReplicatedStorage").HandModels.Katana.handle.Material = Enum.Material.Fabric
-- Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.Material = Enum.Material.Wood
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.Material = Enum.Material.Wood
-- Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.Material = Enum.Material.Slate
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.Material = Enum.Material.Wood
-- Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.Material = Enum.Material.CorrodedMetal
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.Material = Enum.Material.Wood
-- Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.Material = Enum.Material.DiamondPlate
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.Material = Enum.Material.Wood
-- Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.Material = Enum.Material.CorrodedMetal
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.Material = Enum.Material.Plastic
-- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.Material = Enum.Material.Plastic
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.Material = Enum.Material.Plastic
-- Healing Bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.Material = Enum.Material.Snow
-- Bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.Material = Enum.Material.Snow
elseif Options.MaterialV.Value == "ForceField" then
-----HMAR
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.Material = Enum.Material.ForceField
-----PipeSMG
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.Material = Enum.Material.ForceField
-----USP
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.USP.Mag.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].Material = Enum.Material.ForceField
-----Pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].Material = Enum.Material.ForceField
-----Crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.Material = Enum.Material.ForceField
-----Bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.Material = Enum.Material.ForceField
-- Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Katana.handle.Material = Enum.Material.ForceField
-- Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.Material = Enum.Material.ForceField
-- Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.Material = Enum.Material.ForceField
-- Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.Material = Enum.Material.ForceField
-- Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.Material = Enum.Material.ForceField
-- Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.Material = Enum.Material.ForceField
-- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.Material = Enum.Material.ForceField
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.Material = Enum.Material.ForceField
-- Healing Bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.Material = Enum.Material.ForceField
-- Bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.Material = Enum.Material.ForceField
elseif Options.MaterialV.Value == "Neon" then
-----HMAR
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.Material = Enum.Material.Neon
-----PipeSMG
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.Material = Enum.Material.Neon
-----USP
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.USP.Mag.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].Material = Enum.Material.Neon
-----Pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].Material = Enum.Material.Neon
-----Crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.Material = Enum.Material.Neon
-----Bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.Material = Enum.Material.Neon
-- Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Katana.handle.Material = Enum.Material.Neon
-- Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.Material = Enum.Material.Neon
-- Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.Material = Enum.Material.Neon
-- Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.Material = Enum.Material.Neon
-- Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.Material = Enum.Material.Neon
-- Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.Material = Enum.Material.Neon
-- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.Material = Enum.Material.Neon
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.Material = Enum.Material.Neon
-- Healing Bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.Material = Enum.Material.Neon
-- Bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.Material = Enum.Material.Neon
elseif Options.MaterialV.Value == "CrackedLava" then
-----HMAR
game:GetService("ReplicatedStorage").HandModels.HMAR.Barrel.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.Body.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.Bolt.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.Stock.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.Grip.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.Mag.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.Muzzle.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.ADS.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.HMAR.IronSights.Union.Material = Enum.Material.CrackedLava
-----PipeSMG
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.ADS.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipeSMG.IronSights.Union.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Mag.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Flap.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Muzzle.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Body.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipeSMG.Bolt.Material = Enum.Material.CrackedLava
-----USP
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.ADS.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.USP.IronSights.Union.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.USP.Muzzle.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.USP.Mag.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Slide"].Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.USP["Meshes/USP_Body"].Material = Enum.Material.CrackedLava
-----Pipe
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights.ADS.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipePistol.IronSights["Meshes/PipePistolSights"].Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipePistol.Muzzle.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipePistol.Mag.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBody"].Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.PipePistol["Meshes/PipePistolBolt"].Material = Enum.Material.CrackedLava
-----Crossbow
game:GetService("ReplicatedStorage").HandModels.Crossbow.Arrow.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Crossbow["Meshes/Bow"].Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Crossbow.Union.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Crossbow.Body.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Crossbow.Mover.Material = Enum.Material.CrackedLava
-----Bow
game:GetService("ReplicatedStorage").HandModels.Bow.Arrow.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Bow["Meshes/Bow"].Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Bow.Fabric.Material = Enum.Material.CrackedLava
-- Katana
game:GetService("ReplicatedStorage").HandModels.Katana.Blade.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Katana.handle.Material = Enum.Material.CrackedLava
-- Hammer
game:GetService("ReplicatedStorage").HandModels.Hammer.thingy.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Hammer.handkle.Material = Enum.Material.CrackedLava
-- Stone Hammer
game:GetService("ReplicatedStorage").HandModels.StoneHammer.thingy.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.StoneHammer.handkle.Material = Enum.Material.CrackedLava
-- Iron Hammer
game:GetService("ReplicatedStorage").HandModels.IronHammer.thingy.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.IronHammer.handkle.Material = Enum.Material.CrackedLava
-- Steel Hammer
game:GetService("ReplicatedStorage").HandModels.SteelHammer.thingy.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.SteelHammer.handkle.Material = Enum.Material.CrackedLava
-- Crowbar
game:GetService("ReplicatedStorage").HandModels.Crowbar.model.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.Crowbar.Handle.Material = Enum.Material.CrackedLava
-- BloxyCola
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Can.Material = Enum.Material.CrackedLava
game:GetService("ReplicatedStorage").HandModels.BloxyCola.Handle.Material = Enum.Material.CrackedLava
-- Healing Bandage
game:GetService("ReplicatedStorage").HandModels.HealingBandage.Bandage.Material = Enum.Material.CrackedLava
-- Bandage
game:GetService("ReplicatedStorage").HandModels.Bandage.Bandage.Material = Enum.Material.CrackedLava
end
end)
 
--* Custom Skybox *--
 
local CustomSkyTabBox = Tabs.VisualsTab:AddRightTabbox('Custom Sky')
local CustomSkyTab = CustomSkyTabBox:AddTab('Custom Sky')
 
local Socolo = Instance.new("Sky",game:GetService("Lighting"))
 
getgenv().Enabled1 = nil
 
CustomSkyTab:AddToggle('AWASZnfh', {
Text = "Enabled",
Default = false,
Tooltip = "Enables SkyTab",
}):OnChanged(function(SKYB)
Enabled1 = SKYB
end)
 
Socolo.Name = "Custom Skybox"
CustomSkyTab:AddDropdown('SkyC', {
Values = { 'Default', 'Sponge Bob', 'Vaporwave', 'Clouds', 'Twilight', 'Chill', 'Minecraft', 'Among Us', 'Redshift', 'Aesthetic Night', 'Neptune', 'Galaxy'},
Default = 1,
Multi = false,
Text = 'Custom Skybox',
Tooltip = 'Sky Changer',
})
 
Options.SkyC:OnChanged(function(HOMO)
if Enabled1 then
if HOMO == "Default" then
Socolo.SkyboxBk = "rbxasset://textures/sky/sky512_bk.tex"
Socolo.SkyboxDn = "rbxasset://textures/sky/sky512_dn.tex"
Socolo.SkyboxFt = "rbxasset://textures/sky/sky512_ft.tex"
Socolo.SkyboxLf = "rbxasset://textures/sky/sky512_lf.tex"
Socolo.SkyboxRt = "rbxasset://textures/sky/sky512_rt.tex"
Socolo.SkyboxUp = "rbxasset://textures/sky/sky512_up.tex"
elseif HOMO == "Sponge Bob" then
Socolo.SkyboxBk = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxDn = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxFt = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxLf = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxRt = "http://www.roblox.com/asset/?id=7633178166"
Socolo.SkyboxUp = "http://www.roblox.com/asset/?id=7633178166"
elseif HOMO == "Vaporwave" then
Socolo.SkyboxBk = "rbxassetid://1417494030"
Socolo.SkyboxDn = "rbxassetid://1417494146"
Socolo.SkyboxFt = "rbxassetid://1417494253"
Socolo.SkyboxLf = "rbxassetid://1417494402"
Socolo.SkyboxRt = "rbxassetid://1417494499"
Socolo.SkyboxUp = "rbxassetid://1417494643"
elseif HOMO == "Clouds" then
Socolo.SkyboxBk = "rbxassetid://570557514"
Socolo.SkyboxDn = "rbxassetid://570557775"
Socolo.SkyboxFt = "rbxassetid://570557559"
Socolo.SkyboxLf = "rbxassetid://570557620"
Socolo.SkyboxRt = "rbxassetid://570557672"
Socolo.SkyboxUp = "rbxassetid://570557727"
elseif HOMO == "Twilight" then
Socolo.SkyboxBk = "rbxassetid://264908339"
Socolo.SkyboxDn = "rbxassetid://264907909"
Socolo.SkyboxFt = "rbxassetid://264909420"
Socolo.SkyboxLf = "rbxassetid://264909758"
Socolo.SkyboxRt = "rbxassetid://264908886"
Socolo.SkyboxUp = "rbxassetid://264907379"
elseif HOMO == "Chill" then
Socolo.SkyboxBk = "rbxassetid://5084575798"
Socolo.SkyboxDn = "rbxassetid://5084575916"
Socolo.SkyboxFt = "rbxassetid://5103949679"
Socolo.SkyboxLf = "rbxassetid://5103948542"
Socolo.SkyboxRt = "rbxassetid://5103948784"
Socolo.SkyboxUp = "rbxassetid://5084576400"
elseif HOMO == "Minecraft" then
Socolo.SkyboxBk = "rbxassetid://1876545003"
Socolo.SkyboxDn = "rbxassetid://1876544331"
Socolo.SkyboxFt = "rbxassetid://1876542941"
Socolo.SkyboxLf = "rbxassetid://1876543392"
Socolo.SkyboxRt = "rbxassetid://1876543764"
Socolo.SkyboxUp = "rbxassetid://1876544642"
elseif HOMO == "Among Us" then
Socolo.SkyboxBk = "rbxassetid://5752463190"
Socolo.SkyboxDn = "rbxassetid://5872485020"
Socolo.SkyboxFt = "rbxassetid://5752463190"
Socolo.SkyboxLf = "rbxassetid://5752463190"
Socolo.SkyboxRt = "rbxassetid://5752463190"
Socolo.SkyboxUp = "rbxassetid://5752463190"
elseif HOMO == "Redshift" then
Socolo.SkyboxBk = "rbxassetid://401664839"
Socolo.SkyboxDn = "rbxassetid://401664862"
Socolo.SkyboxFt = "rbxassetid://401664960"
Socolo.SkyboxLf = "rbxassetid://401664881"
Socolo.SkyboxRt = "rbxassetid://401664901"
Socolo.SkyboxUp = "rbxassetid://401664936"
elseif HOMO == "Aesthetic Night" then
Socolo.SkyboxBk = "rbxassetid://1045964490"
Socolo.SkyboxDn = "rbxassetid://1045964368"
Socolo.SkyboxFt = "rbxassetid://1045964655"
Socolo.SkyboxLf = "rbxassetid://1045964655"
Socolo.SkyboxRt = "rbxassetid://1045964655"
Socolo.SkyboxUp = "rbxassetid://1045962969"
elseif HOMO == "Neptune" then
Socolo.SkyboxBk = "rbxassetid://218955819"
Socolo.SkyboxDn = "rbxassetid://218953419"
Socolo.SkyboxFt = "rbxassetid://218954524"
Socolo.SkyboxLf = "rbxassetid://218958493"
Socolo.SkyboxRt = "rbxassetid://218957134"
Socolo.SkyboxUp = "rbxassetid://218950090"
Socolo.StarCount = 5000
elseif HOMO == "Galaxy" then
Socolo.SkyboxBk = "http://www.roblox.com/asset/?id=159454299"
Socolo.SkyboxDn = "http://www.roblox.com/asset/?id=159454296"
Socolo.SkyboxFt = "http://www.roblox.com/asset/?id=159454293"
Socolo.SkyboxLf = "http://www.roblox.com/asset/?id=159454286"
Socolo.SkyboxRt = "http://www.roblox.com/asset/?id=159454300"
Socolo.SkyboxUp = "http://www.roblox.com/asset/?id=159454288"
Socolo.StarCount = 5000
end
end
end)
 
--| World Lighting Main |--
 
local WorldLightingTabBox = Tabs.VisualsTab:AddLeftTabbox('Extra')
local WorldTab = WorldLightingTabBox:AddTab('Extra')
 
--// World
 
WorldTab:AddToggle('AWnfh', {
Text = "Loot All",
Default = false,
Tooltip = "Loot Everything Just Press (F)",
}):AddKeyPicker('gakb', {Default = 'F', SyncToggleState = false, Mode = 'Toggle', Text = 'Loot All', NoUI = false,}):OnChanged(function()
Options.gakb:OnClick(function()
local ohNumber1 = 12
local ohNumber2 = 1
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 2
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 3
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 4
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 5
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 6
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 7
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 8
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 9
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 10
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 11
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 12
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 13
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 14
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 15
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 16
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 17
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 18
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 19
local ohBoolean3 = true
local ohNumber1 = 12
local ohNumber2 = 20
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 21
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 22
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 23
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 24
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
local ohNumber1 = 12
local ohNumber2 = 25
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
end)
end)
 
WorldTab:AddToggle('AWAaSZasanfh', {
Text = "Hide Fps Watermark",
Default = false,
Tooltip = "Hides Fps Watermark",
}):OnChanged(function(BaaasaE1)
if BaaasaE1 == true then
game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerStatus.Visible = false
elseif BaaasaE1 == false then
game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerStatus.Visible = true
end
end)
 
WorldTab:AddToggle('AWASZnfh', {
Text = "Hide Server Info",
Default = false,
Tooltip = "Slide forever lol also works as fake crouch",
}):OnChanged(function(BaE1)
if BaE1 == true then
game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerInfo.Visible = false
elseif BaE1 == false then
game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerInfo.Visible = true
end
end)
 
local MyButton = WorldTab:AddButton('Admin / Mod Detector', function()
local function detect(v)
local rank = v:GetRoleInGroup(9225381)
if rank == "Owner" or rank == "Developer" or rank == "Admin" or rank == "Mod" or rank == "Tester" or rank == "Tester" or rank == "pre alpa testa" then
local notifSound = Instance.new("Sound",workspace)
notifSound.PlaybackSpeed = 1.5
notifSound.Volume = 5
notifSound.SoundId = "rbxassetid://170765130"
notifSound.PlayOnRemove = true
notifSound:Destroy()
game.StarterGui:SetCore("SendNotification", {
Title = "Player Alert",
Text = v.Name .. " is " .. rank,
Duration = 30
})
end
end
 
for i,v in next, game.Players:GetPlayers() do
task.spawn(detect, v)
end
 
game.Players.PlayerAdded:connect(function(p)
task.spawn(detect, p)
end)
end)
 
-------------------------------------------------------------------------------------------------
 
--* UI Settings Tab *--
 
Library:OnUnload(function()
for i,v in pairs(Toggles) do
v.Value = false
end
Library.Unloaded = true
end)
 
local GameID = Tabs.UISettings:AddLeftGroupbox('Game')
GameID:AddInput('GameID_Check', {Default = 'Game ID', Numeric = true, Finished = false, Text = 'Game ID', Placeholder = 'Game ID Here'})
 
GameID:AddButton('Join Game', function()
game:GetService("TeleportService"):Teleport(Options.GameID_Check.Value, plr)
end)
 
local MenuGroup = Tabs.UISettings:AddRightGroupbox('Menu')
 
MenuGroup:AddLabel(""..game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerInfo.Text.."", true)
 
MenuGroup:AddLabel('Credits:\n<font color="#de6cff">Made By Ea Scripts </font> ðŸ‘‘', true)
 
MenuGroup:AddButton('Unload Script', function() Library:Unload() end)
 
MenuGroup:AddButton('Panic Button', function()
for i,v in pairs(Toggles) do
v:SetValue(false)
end
end)
 
MenuGroup:AddButton('Rejoin Server', function()
local Rejoin = coroutine.create(function()
local Success, ErrorMessage = pcall(function()
game:GetService("TeleportService"):Teleport(game.PlaceId, plr)
end)
 
if ErrorMessage and not Success then
warn(ErrorMessage)
end
end)
 
coroutine.resume(Rejoin)
end)
 
MenuGroup:AddButton('Copy discord', function()
if pcall(setclipboard,"https://discord.gg/8rSThDKm") then
Library:Notify('Successfully copied discord link to your clipboard!', 5)
end
end)
MenuGroup:AddDivider()
 
MenuGroup:AddToggle('UISettings_KeybindFrameVisibility', {Text = 'Show Keybind Frame', Default = true}):OnChanged(function()
Library.KeybindFrame.Visible = Toggles.UISettings_KeybindFrameVisibility.Value
end)
 
MenuGroup:AddToggle('WatermarkToggle', {Text = 'Watermark', Default = true, Tooltip = nil, })
 
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind
SaveManager:SetLibrary(Library)
SaveManager:SetFolder('Ea scripts/Folder')
SaveManager:BuildConfigSection(Tabs.UISettings)
 
--// Theme Editor
 
ThemeManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
ThemeManager:SetFolder('beamedsolutions/Themes')
ThemeManager:ApplyToTab(Tabs.UISettings)
 
Library:SetWatermarkVisibility(true)
 
frames = 0
 
local RunService = game:GetService("RunService")
RunService.RenderStepped:Connect(function(step)
frames = math.floor(1/step).." fps"
end)
 
spawn(function()
while true do
Toggles.WatermarkToggle:OnChanged(function()
while Toggles.WatermarkToggle.Value do task.wait(0.1) Library:SetWatermark(os.date("beamed.solutions - " .. frames .." | ".."%X".."%p | "..GameName.."")) Library:SetWatermarkVisibility(Toggles.WatermarkToggle.Value) end end)
Library:SetWatermarkVisibility(false)
wait()
end
end)
 
 
 
--Wrapping function - needed to unload(Keep at end of script)
loadstring(game:HttpGet('https://raw.githubusercontent.com/EIOlmqV6v1owgJBEoqj5lK9p01SFE2THpxcOnvX/LinoriaBurnEdition/main/LoaderManager.lua'))() 
